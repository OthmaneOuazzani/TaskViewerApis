using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace TaskViewerApis.Migrations
{
    /// <inheritdoc />
    public partial class trying : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Pas",
                columns: table => new
                {
                    PlmId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ProjectName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LoadedCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LoadedIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LoadedRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LockFlag = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LockDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LockUser = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DecPsa = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    State = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TechnicalAttributesCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TechnicalAttributesIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TechnicalAttributesRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FamilleCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FamilleIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FamilleRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Owner = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Mcid = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Np = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefMonitored = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefSupplierDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefCommonDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Pdef3DExist = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefLeader = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefIsCarryOver = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefValidateDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefValidate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaMonitored = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaSupplierDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaCommonDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Prea3DExist = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaLeader = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaIsCarryOver = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaValidateDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreaValidate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PdefPreaComments = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Exc = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WorkingPackage = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AffectedPerson = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Ecr = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LaCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LaIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LaRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CodeAchat = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectivityOrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectivityUserValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectivitySimilarTo = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VarianceSchemaOrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    VarianceSchemaUserValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MassObjectiveCurrValue = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    MassObjectiveIntmValue = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    MassObjectiveRefValue = table.Column<decimal>(type: "decimal(18,2)", nullable: true),
                    EC4Distribution = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4Revision = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CNXCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CNXIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CNXRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PDEFCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PDEFIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PDEFRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LINKSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LINKSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LINKSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ObjectId = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PLMComments = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Comments = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreationDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ValidationDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestedBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreationValidation = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    AvailabilityDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NewApplicability1 = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    NewApplicability2 = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MandatoryMatrixORValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MandatoryMatrixUserValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MatrixState = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StateOfLinkLowInterchange = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ASolutionOfInterchangeExists = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MCMatrixName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Flag = table.Column<int>(type: "int", nullable: true),
                    ErrorSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Tasks = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Selected = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastModifDate = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BelongsToPCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BelongsToPIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    BelongsToPRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MissingPDEFInPCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MissingPDEFInPIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MissingPDEFInPRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ToKill = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StateSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StateSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StateSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4DistributionSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4DistributionSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4DistributionSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    HighestRevision = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreatedAt = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastModifAt = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ConfigurationContext = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    KPICalled = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    WaitApp = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LastTouch = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4DistributionIsNew = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorDesc = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildCNXCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildCNXIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildCNXRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildPDEFCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildPDEFIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ChildPDEFRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorDescSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorDescSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ErrorDescSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FatherNP = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LAIDSCurrValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LAIDSIntmValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LAIDSRefValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PartialGroup = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UseCaseAssociatedTo = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TaskLink = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreatedBy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4DistributionPrevious = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectivityCur = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DNAErrors = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DNAErrorDesc = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    ProposedUseCase = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EffectivityIsUpdated = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    IsArchived = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EC4Scripting = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ColorRefs = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    LatestEvent = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EventType = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PreviousEffectivity = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CancelledAt = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestedRefs = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Pas", x => x.PlmId);
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Pas");
        }
    }
}
